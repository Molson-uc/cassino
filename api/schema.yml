openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /accounts/:
    post:
      operationId: accounts_create
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /players/:
    get:
      operationId: players_list
      tags:
      - players
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
          description: ''
    post:
      operationId: players_create
      tags:
      - players
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Player'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Player'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
  /players/{id}/:
    get:
      operationId: players_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - players
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
  /tables/:
    get:
      operationId: tables_list
      tags:
      - tables
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Table'
          description: ''
    post:
      operationId: tables_create
      description: create table
      parameters:
      - in: query
        name: game_master_id
        schema:
          type: integer
        required: true
      - in: query
        name: table_id
        schema:
          type: integer
        required: true
      tags:
      - tables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Table'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Table'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
  /tables/{id}/:
    get:
      operationId: tables_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - tables
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
    put:
      operationId: tables_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - tables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
  /transactions/:
    post:
      operationId: transactions_create
      tags:
      - transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
components:
  schemas:
    Player:
      type: object
      properties:
        player_id:
          type: integer
        table_id:
          type: integer
        stack:
          type: integer
      required:
      - player_id
      - stack
      - table_id
    Table:
      type: object
      properties:
        table_id:
          type: integer
        game_master_id:
          type: integer
      required:
      - game_master_id
      - table_id
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    Transaction:
      type: object
      properties:
        source_id:
          type: string
          maxLength: 50
        target_id:
          type: string
          maxLength: 50
        money:
          type: integer
      required:
      - money
      - source_id
      - target_id
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
